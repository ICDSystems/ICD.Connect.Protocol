using System;
using ICD.Common.Utils;
using ICD.Common.Utils.EventArguments;
using ICD.Common.Utils.Extensions;
using ICD.Common.Utils.IO;
using ICD.Connect.Protocol.Network.Servers;

namespace ICD.Connect.Protocol.Network.Ports.TcpSecure
{
	public sealed partial class IcdSecureTcpServer : AbstractNetworkServer
	{
		private const string ICD_SECURE_TCP_SERVER_COMMON_NAME = "ICDAutoGeneratedCertificate";
		private const string AUTO_GENERATED_CERTIFICATE_PATH_PREFIX = "ICDAutoGeneratedCertificate-";
		private const string CERTIFICATE_EXTENSION = ".pfx";

		public event EventHandler<StringEventArgs> OnCertificatePathChanged;

		private string WriteBouncyCastleCertFile(Org.BouncyCastle.X509.X509Certificate cert, string uuid)
		{
			string path = PathUtils.Join(PathUtils.ProgramDataPath,
			                             string.Concat(AUTO_GENERATED_CERTIFICATE_PATH_PREFIX, uuid, CERTIFICATE_EXTENSION));

			using (var f = IcdFile.Create(path))
			{
				byte[] buf = cert.GetEncoded();
				f.WrappedFileStream.Write(buf, 0, buf.Length);
			}

			OnCertificatePathChanged.Raise(this, new StringEventArgs(path));
			return path;
		}
	}
}